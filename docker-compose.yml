services:
  discovery-micro:
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '0.5'
    build: ./discoveryMicro
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_HEALTHCHECK_ENABLED=true
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_INSTANCE_INFO_REFRESH_INTERVAL_SECONDS=30
      - EUREKA_CLIENT_HEARTBEAT_INTERVAL_SECONDS=10
      - EUREKA_INSTANCE_NON_SECURE_PORT=8761
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - EUREKA_SERVER_WAIT_TIME_IN_MS_WHEN_SYNC_EMPTY=30000
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_HEALTHCHECK_ENABLED=true

    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 60s
    networks:
        - my-network

  api-gateway:
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '0.5'
    build: ./apiGateway
    container_name: api-gateway
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-micro:8761/eureka/
      - EUREKA_INSTANCE_APPNAME=api-gateway
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED=true
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID=true
    depends_on:
      discovery-micro:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8083/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - my-network

  user-service:
    build: ./user
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-micro:8761/eureka/
      - EUREKA_INSTANCE_APPNAME=user-service
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/userdb
      - SPRING_DATASOURCE_USERNAME=ycse
      - SPRING_DATASOURCE_PASSWORD=qwerty12341
      - SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT=30000
      - EUREKA_CLIENT_INITIAL_INSTANCE_INFO_REPLICATION_INTERVAL_SECONDS=5
    depends_on:
      discovery-micro:
        condition: service_healthy
      user-db:
        condition: service_healthy
    networks:
      - my-network

  companies-service:
    build: ./company
    container_name: companies-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-micro:8761/eureka/
      - EUREKA_INSTANCE_APPNAME=companies-service
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_DATASOURCE_URL=jdbc:postgresql://company-db:5432/companydb
      - SPRING_DATASOURCE_USERNAME=ycse
      - SPRING_DATASOURCE_PASSWORD=qwerty12341
      - SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT=30000
      - EUREKA_CLIENT_INITIAL_INSTANCE_INFO_REPLICATION_INTERVAL_SECONDS=5
    depends_on:
      discovery-micro:
        condition: service_healthy
      company-db:
        condition: service_healthy
    networks:
      - my-network

  user-db:
    image: postgres:16.3
    container_name: user-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=userdb
      - POSTGRES_USER=ycse
      - POSTGRES_PASSWORD=qwerty12341
    volumes:
      - user-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ycse -d userdb
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - my-network

  company-db:
    image: postgres:16.3
    container_name: company-db
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=companydb
      - POSTGRES_USER=ycse
      - POSTGRES_PASSWORD=qwerty12341
    volumes:
      - company-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ycse -d companydb
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - my-network

volumes:
  user-data:
  company-data:

networks:
  my-network:
    driver: bridge

